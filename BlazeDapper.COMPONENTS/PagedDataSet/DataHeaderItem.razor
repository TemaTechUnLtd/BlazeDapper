@using BlazeDapper.MODELS.DAL;
@using Microsoft.AspNetCore.Components.Forms;

@typeparam T

<th>
    <div>
        <div>
            <span>@ColumnHeader.DisplayName</span>

            <div>
                <a href="#" style="cursor:pointer;" @onclick='(()=>GetSortedData(ColumnHeader.ColumnName))'
                   title="Sort by @ColumnHeader.DisplayName"
                   @onclick:preventDefault>
                    <SwitchVerticalIcon style="height:20px;"  />
                </a>
                @if (ColumnHeader.ColumnType != TypeCode.DateTime)
                {
                    <a href="#" style="cursor:pointer;" @onclick:preventDefault @onclick="AddSearchTerm"
                   title="Add Search Term">
                        <PlusCircleIcon style="height:20px;" />
                    </a>
                    <a href="#" style="cursor:pointer;" @onclick:preventDefault @onclick="RemoveSearchTerm"
                   title="Remove Search Term">
                        <MinusCircleIcon style="height:20px;"/>
                    </a>
                }
            </div>
        </div>

        <div>
            @switch (ColumnHeader.ColumnType)
            {
                case TypeCode.String:
                case TypeCode.Int32:
                case TypeCode.Decimal:
                    @for (var i = 0; i < ColumnHeader.SearchTerms.Count(); i++)
                    {
                        <DataHeaderItemFilter Index="i"
                                  ColumnName="@ColumnHeader.ColumnName"
                                  DisplayName="@ColumnHeader.DisplayName"
                                  SearchTerm="@ColumnHeader.SearchTerms[i]"
                                  T="T" />
                    }
                    break;
                case TypeCode.DateTime:
                    <div class="flex flex-col">
                        <input @bind="@ColumnHeader.FromDate" type="date" title="Start Date" class="form-control" placeholder="From Date" @onblur="SetFilterType">
                        <input @bind="@ColumnHeader.ToDate" type="date" title="End Date" class="form-control" placeholder="To Date" @onblur="SetFilterType">
                    </div>
                    break;
                case TypeCode.Boolean:
                    <InputSelect @bind-Value="@ColumnHeader.BoolValue" class="form-control">
                        <option value="@BoolValue.Select">@BoolValue.Select</option>
                        <option value="@BoolValue.True">@BoolValue.True</option>
                        <option value="@BoolValue.False">@BoolValue.False</option>

                    </InputSelect>
                    break;
                default:
                    break;
            }
        </div>
    </div>
</th>

